@* C# - Controlador ASP.NET con inyección de dependencias y método de ejemplo *@

@using Microsoft.AspNetCore.Mvc
@inject IProductService ProductService

@{
    var products = ProductService.GetProducts();
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Product List</title>
    <style>
        /* CSS - Estilos básicos */
        body {
            font-family: Arial, sans-serif;
            background: #f0f0f0;
            color: #333;
        }

        h1 {
            color: #007bff;
        }

        .product {
            padding: 5px;
            border-bottom: 1px solid #ddd;
        }
    </style>
</head>
<body>
    <h1>Products</h1>

    <!-- HTML + Razor - Renderizado dinamico de datos -->

    <ul>
        @foreach (var product in products)
        {
            <li class="product">@product.Name - @product.Price.ToString("C")</li>
        }
    </ul>

    <script>
        // JavaScript - Llamada a la API REST
        fetch("/api/products")
            .then(response => response.json())
            .then(data => console.log("Products:", data));
    </script>

    <!-- JSON - Configuración en línea -->
    <script type="application/json" id="config">
        {
            "apiUrl": "/api/products",
            "theme": "light"
        }
    </script>
</body>
</html>

@* Comentario Razor: Este archivo combina C#, Razor, HTML, CSS, JS y JSON *@

@functions {
    // C# - Definición de clases dentro del mismo archivo

    public interface IProductService { List<Product> GetProducts(); }

    public class ProductService : IProductService
    {
        public List<Product> GetProducts() => new()
        { new(1, "Laptop", 1200.99M), new(2, "Mouse", 25.50M) };
    }

    public record Product(int Id, string Name, decimal Price);
}
